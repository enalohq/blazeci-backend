"""add_github_installations_table

Revision ID: 008a19ff5e36
Revises: 34ddbead2b87
Create Date: 2025-10-01 11:32:22.265744

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '008a19ff5e36'
down_revision: Union[str, None] = '34ddbead2b87'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('githubinstallations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('installation_id', sa.Integer(), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('account_login', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('account_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('target_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('permissions', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('events', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('suspended_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_githubinstallations_account_id'), 'githubinstallations', ['account_id'], unique=False)
    op.create_index(op.f('ix_githubinstallations_account_login'), 'githubinstallations', ['account_login'], unique=False)
    op.create_index(op.f('ix_githubinstallations_account_type'), 'githubinstallations', ['account_type'], unique=False)
    op.create_index(op.f('ix_githubinstallations_installation_id'), 'githubinstallations', ['installation_id'], unique=True)
    op.create_index(op.f('ix_githubinstallations_target_type'), 'githubinstallations', ['target_type'], unique=False)
    op.drop_index('ix_user_tokens_user_id', table_name='user_tokens')
    op.drop_table('user_tokens')
    op.drop_index('ix_user_repos_github_repo_id', table_name='user_repos')
    op.drop_index('ix_user_repos_user_id', table_name='user_repos')
    op.drop_table('user_repos')
    op.alter_column('repos', 'description',
               existing_type=sa.TEXT(),
               type_=sqlmodel.sql.sqltypes.AutoString(),
               existing_nullable=True)
    op.drop_constraint('repos_github_repo_id_key', 'repos', type_='unique')
    op.drop_index('ix_repos_github_repo_id', table_name='repos')
    op.create_index(op.f('ix_repos_github_repo_id'), 'repos', ['github_repo_id'], unique=True)
    op.drop_constraint('users_github_user_id_key', 'users', type_='unique')
    op.drop_index('ix_users_github_user_id', table_name='users')
    op.create_index(op.f('ix_users_github_user_id'), 'users', ['github_user_id'], unique=True)
    op.drop_constraint('webhooks_repo_id_fkey', 'webhooks', type_='foreignkey')
    op.create_foreign_key(None, 'webhooks', 'repos', ['repo_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'webhooks', type_='foreignkey')
    op.create_foreign_key('webhooks_repo_id_fkey', 'webhooks', 'repos', ['repo_id'], ['id'], ondelete='CASCADE')
    op.drop_index(op.f('ix_users_github_user_id'), table_name='users')
    op.create_index('ix_users_github_user_id', 'users', ['github_user_id'], unique=False)
    op.create_unique_constraint('users_github_user_id_key', 'users', ['github_user_id'], postgresql_nulls_not_distinct=False)
    op.drop_index(op.f('ix_repos_github_repo_id'), table_name='repos')
    op.create_index('ix_repos_github_repo_id', 'repos', ['github_repo_id'], unique=False)
    op.create_unique_constraint('repos_github_repo_id_key', 'repos', ['github_repo_id'], postgresql_nulls_not_distinct=False)
    op.alter_column('repos', 'description',
               existing_type=sqlmodel.sql.sqltypes.AutoString(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.create_table('user_repos',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('github_repo_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('permission', sa.VARCHAR(length=50), server_default=sa.text("'read'::character varying"), autoincrement=False, nullable=False),
    sa.Column('selected_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['github_repo_id'], ['repos.github_repo_id'], name='user_repos_github_repo_id_fkey', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='user_repos_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='user_repos_pkey'),
    sa.UniqueConstraint('user_id', 'github_repo_id', name='user_repos_user_id_github_repo_id_key', postgresql_include=[], postgresql_nulls_not_distinct=False)
    )
    op.create_index('ix_user_repos_user_id', 'user_repos', ['user_id'], unique=False)
    op.create_index('ix_user_repos_github_repo_id', 'user_repos', ['github_repo_id'], unique=False)
    op.create_table('user_tokens',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('encrypted_token', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('token_type', sa.VARCHAR(length=50), server_default=sa.text("'oauth'::character varying"), autoincrement=False, nullable=False),
    sa.Column('scopes', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('expires_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('CURRENT_TIMESTAMP'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='user_tokens_user_id_fkey', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='user_tokens_pkey')
    )
    op.create_index('ix_user_tokens_user_id', 'user_tokens', ['user_id'], unique=False)
    op.drop_index(op.f('ix_githubinstallations_target_type'), table_name='githubinstallations')
    op.drop_index(op.f('ix_githubinstallations_installation_id'), table_name='githubinstallations')
    op.drop_index(op.f('ix_githubinstallations_account_type'), table_name='githubinstallations')
    op.drop_index(op.f('ix_githubinstallations_account_login'), table_name='githubinstallations')
    op.drop_index(op.f('ix_githubinstallations_account_id'), table_name='githubinstallations')
    op.drop_table('githubinstallations')
    # ### end Alembic commands ###
