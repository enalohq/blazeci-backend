"""Refactor to plural table names with Users and UserTokens separation

Revision ID: 374535b40c04
Revises: 8e3e54eef788
Create Date: 2025-10-01 08:41:57.195549

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '374535b40c04'
down_revision: Union[str, None] = '8e3e54eef788'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('repos',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('github_repo_id', sa.Integer(), nullable=False),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('owner_login', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('full_name', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('private', sa.Boolean(), nullable=False),
    sa.Column('default_branch', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('language', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('stars_count', sa.Integer(), nullable=False),
    sa.Column('forks_count', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_repos_full_name'), 'repos', ['full_name'], unique=False)
    op.create_index(op.f('ix_repos_github_repo_id'), 'repos', ['github_repo_id'], unique=True)
    op.create_index(op.f('ix_repos_name'), 'repos', ['name'], unique=False)
    op.create_index(op.f('ix_repos_owner_login'), 'repos', ['owner_login'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('github_user_id', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('github_login', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('avatar_url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=False)
    op.create_index(op.f('ix_users_github_login'), 'users', ['github_login'], unique=False)
    op.create_index(op.f('ix_users_github_user_id'), 'users', ['github_user_id'], unique=True)
    op.create_table('userrepos',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('github_repo_id', sa.Integer(), nullable=False),
    sa.Column('permission', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('selected_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['github_repo_id'], ['repos.github_repo_id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sqlite_autoincrement=True
    )
    op.create_index(op.f('ix_userrepos_github_repo_id'), 'userrepos', ['github_repo_id'], unique=False)
    op.create_index(op.f('ix_userrepos_user_id'), 'userrepos', ['user_id'], unique=False)
    op.create_table('usertokens',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('encrypted_token', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('token_type', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('scopes', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_usertokens_user_id'), 'usertokens', ['user_id'], unique=False)
    op.create_table('webhooks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('repo_id', sa.Integer(), nullable=False),
    sa.Column('github_webhook_id', sa.Integer(), nullable=True),
    sa.Column('secret', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('url', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('events', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['repo_id'], ['repos.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_webhooks_repo_id'), 'webhooks', ['repo_id'], unique=False)
    op.drop_index('ix_label_repo_id', table_name='label')
    op.drop_table('label')
    op.drop_index('ix_repo_github_repo_id', table_name='repo')
    op.drop_table('repo')
    op.drop_table('userrepo')
    op.drop_index('ix_usertoken_github_user_id', table_name='usertoken')
    op.drop_table('usertoken')
    op.drop_table('webhook')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('webhook',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('repo_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('webhook_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('secret', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('url', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('active', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['repo_id'], ['repo.id'], name='webhook_repo_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='webhook_pkey')
    )
    op.create_table('usertoken',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('usertoken_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('github_user_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('github_login', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('encrypted_token', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='usertoken_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_usertoken_github_user_id', 'usertoken', ['github_user_id'], unique=True)
    op.create_table('userrepo',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('repo_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('selected_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['repo_id'], ['repo.id'], name='userrepo_repo_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['usertoken.id'], name='userrepo_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='userrepo_pkey')
    )
    op.create_table('repo',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('repo_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('github_repo_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('owner_login', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('full_name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('private', sa.BOOLEAN(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='repo_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_repo_github_repo_id', 'repo', ['github_repo_id'], unique=True)
    op.create_table('label',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('repo_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['repo_id'], ['repo.id'], name='label_repo_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='label_pkey')
    )
    op.create_index('ix_label_repo_id', 'label', ['repo_id'], unique=True)
    op.drop_index(op.f('ix_webhooks_repo_id'), table_name='webhooks')
    op.drop_table('webhooks')
    op.drop_index(op.f('ix_usertokens_user_id'), table_name='usertokens')
    op.drop_table('usertokens')
    op.drop_index(op.f('ix_userrepos_user_id'), table_name='userrepos')
    op.drop_index(op.f('ix_userrepos_github_repo_id'), table_name='userrepos')
    op.drop_table('userrepos')
    op.drop_index(op.f('ix_users_github_user_id'), table_name='users')
    op.drop_index(op.f('ix_users_github_login'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_repos_owner_login'), table_name='repos')
    op.drop_index(op.f('ix_repos_name'), table_name='repos')
    op.drop_index(op.f('ix_repos_github_repo_id'), table_name='repos')
    op.drop_index(op.f('ix_repos_full_name'), table_name='repos')
    op.drop_table('repos')
    # ### end Alembic commands ###
